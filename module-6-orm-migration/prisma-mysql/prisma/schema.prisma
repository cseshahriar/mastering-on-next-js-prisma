// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}



// enum type
enum UserType {
  Visitor
  Staff
  SuperAdmin
}
// model creation
model User {
  id Int @id @default(autoincrement())
  name String
  city String
  phone String
  postCode String
  email String @unique
  password String
  role UserType
}

model Numbers {
  id Int @id @default(autoincrement())  // Primar key
  coll Int @db.UnsignedInt // unsigned integer length 11

  col2 BigInt // l2n 20
  col3 BigInt @db.UnsignedBigInt // len 20

  col4 Int @db.SmallInt // len 9
  col5 Int @db.UnsignedSmallInt // len 9

  col6 Int @db.MediumInt // len 4
  col7 Int @db.UnsignedMediumInt // len 4

  col8 Int @db.TinyInt // len 4
  col9 Int @db.UnsignedTinyInt // len 4

  col10 Decimal @db.Decimal // len (65, 30)
  col11 Float
  col12 Float @db.Float

  col13 BigInt @default(10)
  col14 BigInt @unique
}

model StringText {
  id        Int      @id @default(autoincrement()) // Primary key , Integer length 11 & Auto Increment Equivalent Column
  col1      String   // Varchar Length 191 Equivalent Column
  col2      String?  // Nullable Varchar Length 191 Equivalent Column
  col3      String   @default("Bangladesh") // Default value Bangladesh Varchar Length 191 Equivalent Column
  col4      String   @db.VarChar(1000) // Varchar Length 1000 Equivalent Column
  col6      String   @db.TinyText // TinyText Equivalent Column
  col7      String   @db.Text // Text Equivalent Column
  col8      String   @db.LongText // LongText Equivalent Column
  col9      String   @db.MediumText // MediumText Equivalent Column
}